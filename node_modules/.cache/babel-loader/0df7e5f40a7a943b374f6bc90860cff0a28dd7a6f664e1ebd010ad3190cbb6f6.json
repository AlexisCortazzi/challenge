{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alex\\\\Desktop\\\\challenge-react\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Card from './components/card';\nimport axios from 'axios';\nimport day from './day.jpg';\nimport afternoon from './afternoon.jpg';\nimport night from './night.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const API_KEY = '10f5fc043a0815d3b2db734dd151a90a';\n  const [cityarg, setCityArg] = useState('Buenos Aires');\n  const [city, setCity] = useState('Buenos Aires');\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [backgroundImage, setBackgroundImage] = useState();\n  const [date, setDate] = useState(new Date());\n  const [hoursarg, setHoursArg] = new Date().toLocaleString('es-CO', 'America/Bogota');\n  // const horaActualUTC = new Date().toUTCString();\n  // const hora = horaActualUTC.setHours(horaActualUTC.getHours() - 5);\n  const horaActualUTC = new Date();\n  // horaActualUTC.setUTCHours(horaActualUTC.getUTCHours() - 5);\n  // const horaActualUTCFormateadaMenos5 = horaActualUTC.toUTCString();\n\n  const handleDate = timezone => {\n    let hora = horaActualUTC.setUTCHours(horaActualUTC.getUTCHours() - timezone / 3600);\n    return hora.toUTCString();\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`).then((res, req) => {\n        console.log(res);\n        setData(res.data);\n        setLoading(false);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    fetchData();\n  }, [city]);\n\n  // console.log(data)\n  // console.log(date)\n  // console.log(hoursarg)\n  //console.log(horaActualUTCFormateadaMenos5)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`,\n      backgroundSize: \"cover\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      loading: loading,\n      data: data,\n      setCity: setCity,\n      date: handleDate(data.timezone)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dsnur7/vXrt+yVUFcm5xKcWvBRw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useEffect","useState","Card","axios","day","afternoon","night","jsxDEV","_jsxDEV","App","_s","API_KEY","cityarg","setCityArg","city","setCity","data","setData","loading","setLoading","backgroundImage","setBackgroundImage","date","setDate","Date","hoursarg","setHoursArg","toLocaleString","horaActualUTC","handleDate","timezone","hora","setUTCHours","getUTCHours","toUTCString","fetchData","get","then","res","req","console","log","catch","error","className","style","backgroundSize","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alex/Desktop/challenge-react/src/App.jsx"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Card from './components/card';\nimport axios from 'axios';\nimport day  from './day.jpg'\nimport afternoon  from './afternoon.jpg'\nimport night  from './night.jpg'\n\n\nfunction App() {\n\n  \n  const API_KEY = '10f5fc043a0815d3b2db734dd151a90a';\n  \n  const [cityarg, setCityArg] = useState('Buenos Aires')\n  const [city, setCity] = useState('Buenos Aires');\n  const [data, setData] = useState()\n  const [loading, setLoading] = useState(true)\n  const [backgroundImage, setBackgroundImage] = useState()\n  const [date, setDate] = useState(new Date())\n  const [hoursarg, setHoursArg] = new Date().toLocaleString('es-CO', 'America/Bogota');\n  // const horaActualUTC = new Date().toUTCString();\n  // const hora = horaActualUTC.setHours(horaActualUTC.getHours() - 5);\n  const horaActualUTC = new Date();\n  // horaActualUTC.setUTCHours(horaActualUTC.getUTCHours() - 5);\n  // const horaActualUTCFormateadaMenos5 = horaActualUTC.toUTCString();\n\n\n  const handleDate = (timezone) => {\n    let hora = horaActualUTC.setUTCHours(horaActualUTC.getUTCHours() - (timezone/3600));\n    return hora.toUTCString();\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios\n      .get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`)\n      .then((res, req) => {\n        console.log(res)\n        setData(res.data)\n        setLoading(false)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n    }\n    fetchData()\n  },[city])\n\n  \n  // console.log(data)\n  // console.log(date)\n  // console.log(hoursarg)\n  //console.log(horaActualUTCFormateadaMenos5)\n\n  \n  \n\n\n\n  return (\n    <div className=\"App\" style={{ backgroundImage: `url(${backgroundImage})`, backgroundSize: \"cover\" }}>\n      <Card loading={loading} data={data} setCity={setCity} date={handleDate(data.timezone)}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}